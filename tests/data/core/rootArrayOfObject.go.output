// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package test

import "fmt"
import "encoding/json"

type MyObject struct {
	// MyString corresponds to the JSON schema field "myString".
	MyString string `json:"myString"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *MyObject) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if v, ok := raw["myString"]; !ok || v == nil {
		return fmt.Errorf("field myString: required")
	}
	type Plain MyObject
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = MyObject(plain)
	return nil
}

type RootArrayOfObject []MyObject
